interactions:
- request:
    body: '{"messages":[{"role":"system","content":"Your input fields are:\n1. `question`
      (str)\n\nYour output fields are:\n1. `reasoning` (str)\n2. `answer` (float)\n\nAll
      interactions will be structured in the following way, with the appropriate values
      filled in.\n\n[[ ## question ## ]]\n{question}\n\n[[ ## reasoning ## ]]\n{reasoning}\n\n[[
      ## answer ## ]]\n{answer}        # note: the value you produce must be a single
      float value\n\n[[ ## completed ## ]]\n\nIn adhering to this structure, your
      objective is: \n        Given the fields `question`, produce the fields `answer`."},{"role":"user","content":"[[
      ## question ## ]]\nTwo dice are tossed. What is the probability that the sum
      equals two?\n\nRespond with the corresponding output fields, starting with the
      field `[[ ## reasoning ## ]]`, then `[[ ## answer ## ]]` (must be formatted
      as a valid Python float), and then ending with the marker for `[[ ## completed
      ## ]]`."}],"model":"gpt-4o-mini","max_tokens":1000,"temperature":0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '984'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.63.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.63.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFRfa9swEH/PpzjUl3Y4WeyEpA3sZS+FDfawDTZIS1Ckc6RW1nk6OWko
        /e5DdhKntIP5weD7/dGd7s7PAwBhtViAUEZGVdVu+Dmn79NvrK+feHtzS18afNzNb6fb318f4g+R
        JQWtH1DFo2qkqKodRku+g1VAGTG55vPJzXye34yLFqhIo0uyTR2HUxpW1tthMS6mw/F8mF8f1Ias
        QhYLWA4AAJ7bd8rTa3wSCxhnx0iFzHKDYnEiAYhALkWEZLYcpY8i60FFPqJvU18u4eICAkomb/0m
        fdzf3/lfBj3EHYG2CkEGhEjMqDNAqQxoi2AkwwxKqZAzcCh1kkcCCZGidEAlzOADzOATTGZQE7Nd
        OwRqoqIKeQQ/DQJ5t4ed3LdCZSxuESRwUyV5AZbBlrCmaLpE2NAOJORwaUc4yuAyz/Krq9YqYGK3
        fjmUcktBnh0HJQWIxjLgFn08KEoKmEE0CHWgtVxbZ+M+nZxCKQn800iX6mpTSVHfVGsMifPmDAZt
        t1ajhvW+5Xb30CuOvAx2xiqTLPOPk9nozt/5rg/S8w7DsQnj0biYv35mPfcwb6g7+nl/A5YNyzRj
        vnHuEH85DYyjTaqXD/gpXlpv2ay6YUjDwZFq0aIvA4D7djCbV7Mm6kBVHVeRHtEnw2I86fxEvw89
        mhfTA9reTQ9Minn2juFKY5TW8dlsCyWVQd1L+0WQjbZ0BgzOyn6bznvepz34H/seUArriHpVB9RW
        vS65pwVM/4t/0U7X3CYsGMPWKlxFiyG1QmMpG9dtseA9R6xWpfUbDHWw3SqX9SqfIOppqTAXg5fB
        XwAAAP//AwBGBFjM2AQAAA==
    headers:
      CF-RAY:
      - 91338b974a45441f-BOM
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 17 Feb 2025 05:58:28 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - wandb
      openai-processing-ms:
      - '5897'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149998790'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_01f47d68ade5e48dfae75f9fdd203655
    status:
      code: 200
      message: OK
version: 1
