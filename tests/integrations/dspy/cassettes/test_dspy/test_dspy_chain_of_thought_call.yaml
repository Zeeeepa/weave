interactions:
- request:
    body: '{"messages":[{"role":"system","content":"Your input fields are:\n1. `question`
      (str)\n\nYour output fields are:\n1. `reasoning` (str)\n2. `answer` (float)\n\nAll
      interactions will be structured in the following way, with the appropriate values
      filled in.\n\n[[ ## question ## ]]\n{question}\n\n[[ ## reasoning ## ]]\n{reasoning}\n\n[[
      ## answer ## ]]\n{answer}        # note: the value you produce must be a single
      float value\n\n[[ ## completed ## ]]\n\nIn adhering to this structure, your
      objective is: \n        Given the fields `question`, produce the fields `answer`."},{"role":"user","content":"[[
      ## question ## ]]\nTwo dice are tossed. What is the probability that the sum
      equals two?\n\nRespond with the corresponding output fields, starting with the
      field `[[ ## reasoning ## ]]`, then `[[ ## answer ## ]]` (must be formatted
      as a valid Python float), and then ending with the marker for `[[ ## completed
      ## ]]`."}],"model":"gpt-4o-mini","max_tokens":1000,"temperature":0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '984'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.63.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.63.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.13
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFTBbtswDL3nKwj10m5OFsddsgbYpdgOOxXYOuzQFoEs0ZE2WfREOVlQ
        9N8H2Umcoh0wHwyY7/GJFB/9OAIQVoslCGVkVHXjxtd5/LSrZUHfvmv5effl+quiRVPe3Ph2o0WW
        Mqj8iSoesiaK6sZhtOR7WAWUEZNqviiuFlfTIp92QE0aXUpbN3F8SePaejueTWeX4+linH/YZxuy
        Clks4W4EAPDYvVOdXuMfsYROq4vUyCzXKJZHEoAI5FJESGbLUfoosgFU5CP6rvS7Ozg7g4CSyVu/
        Th8PD/f+h0EPcUugrUKQASESM+oMUCoD2iIYyTCHSirkDAJy62ISsB4kRIrSAVUwhzcwh49QzKEh
        Zls6BGqjohp5ArcGgbzbwVbuIBJIZSxuECRwW6f0GVgGW0FJ0fSlsKEtSMjhPIe3kF90IgETr1PK
        oZIbCvLkIDjPM8gvIBoZ94VyX+bhlL1IRQEziAahCVTK0jobd4mQQomLv1vpUpNdXSnq27rEkDgv
        jmXQdmM1aih3Hbe/lCHjwMtga6wySTJ/V8wn9/7e92ORnrcYDjOZTqazxfNnPnD39kPd00/HHbBq
        WSbL+da5ffzp6B9H69Qv7/FjvLLesln13khe4UiN6NCnEcBD59P2mfVEE6hu4irSL/RJcDYtej0x
        rMeA5sVsj3Z3MwBF8T57RXClMUrr+MTqQkllUA+pw17IVls6AUYnbb8s5zXt41r8j/wAKIVNRL1q
        Amqrnrc80AKm38e/aMdr7goWjGFjFa6ixZBGobGSreuXWvCOI9aryvo1hibYfrOrZpUXiPqyUpiL
        0dPoLwAAAP//AwCElyLr5wQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 91354d015b8cf4b4-BOM
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Mon, 17 Feb 2025 11:05:12 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - wandb
      openai-processing-ms:
      - '2014'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149998790'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_b33f1ce0354f62c7a9f5b52c36b8a090
    status:
      code: 200
      message: OK
version: 1
