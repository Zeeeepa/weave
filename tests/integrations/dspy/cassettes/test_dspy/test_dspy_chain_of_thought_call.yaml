interactions:
- request:
    body: '{"messages":[{"role":"system","content":"Your input fields are:\n1. `question`
      (str)\n\nYour output fields are:\n1. `reasoning` (str)\n2. `answer` (float)\n\nAll
      interactions will be structured in the following way, with the appropriate values
      filled in.\n\n[[ ## question ## ]]\n{question}\n\n[[ ## reasoning ## ]]\n{reasoning}\n\n[[
      ## answer ## ]]\n{answer}        # note: the value you produce must be a single
      float value\n\n[[ ## completed ## ]]\n\nIn adhering to this structure, your
      objective is: \n        Given the fields `question`, produce the fields `answer`."},{"role":"user","content":"[[
      ## question ## ]]\nTwo dice are tossed. What is the probability that the sum
      equals two?\n\nRespond with the corresponding output fields, starting with the
      field `[[ ## reasoning ## ]]`, then `[[ ## answer ## ]]` (must be formatted
      as a valid Python float), and then ending with the marker for `[[ ## completed
      ## ]]`."}],"model":"gpt-4o-mini","max_tokens":1000,"temperature":0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate, zstd
      connection:
      - keep-alive
      content-length:
      - '984'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.62.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.62.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.8
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFRfb9MwEH/vpzh5LxtKS5N0bZnEAzwhHnhACJC2qXLtS33D8QXbaSnT
        vjty0jadGBJ5iJT7/fGd7y6PIwBBWtyAUEZGVTd2/L748Ln6zfRRfV1+b21Qm/aTWr67duXDrhJZ
        UvD6AVU8qiaK68ZiJHY9rDzKiMk1X5Rvlstyll93QM0abZJtmjie8bgmR+NiWszG08U4Xx7Uhklh
        EDdwOwIAeOzeKU+n8Ze4gWl2jNQYgtyguDmRAIRnmyJChkAhShdFNoCKXUTXpX57CxcX4FEGduQ2
        6eP+/s59M+gg7hg0KQTpESKHgDoDlMqAJgQjA8yhkgpDBhalTvLIICFylBa4gjm8gjm8hXIODYdA
        a4vAbVRcY5jAF4PAzu5hJ/edUBnCLYKE0NZJXgAFoArWHE2fSDC8Awk5XNIEJxlc5ll+ddVZeUzs
        zi+HSm7Zy7PjoGIP0VAA3KKLB0XFHjOIBqHxvJZrshT36eQUSkngz1baVFeXSoq6tl6jT5y/zgig
        aUsaNaz3Hbe/h0Fx5GWwM6RMssxfl/PJnbtzfR+kCzv0xyZMJ9Ni8fyZD9zDvKHu6ef99Vi1QaYZ
        c621h/jTaWAsb1K94YCf4hU5CmbVD0MajhC5ER36NAK47wazfTZrovFcN3EV+Qe6ZFhMy95PDPsw
        oHkxO6Dd3QxAWSyyFwxXGqMkG85mWyipDOpBOiyCbDXxGTA6K/vvdF7yPu3B/9gPgFLYRNSrxqMm
        9bzkgeYx/S/+RTtdc5ewCOi3pHAVCX1qhcZKtrbfYhH2IWK9qsht0Dee+lWumlVeIupZpTAXo6fR
        HwAAAP//AwD5jZ+h2AQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 913e2e12791f3a28-BOM
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 18 Feb 2025 12:56:57 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - wandb
      openai-processing-ms:
      - '1521'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149998790'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_937fce6affc8f7630c8a0323970971f8
    status:
      code: 200
      message: OK
version: 1
