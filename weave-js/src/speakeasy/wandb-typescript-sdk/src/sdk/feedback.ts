/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { feedbackCreate } from "../funcs/feedbackCreate.js";
import { feedbackPurge } from "../funcs/feedbackPurge.js";
import { feedbackQuery } from "../funcs/feedbackQuery.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Feedback extends ClientSDK {
  /**
   * Feedback Create
   *
   * @remarks
   * Add feedback to a call or object.
   */
  async create(
    request: components.FeedbackCreateReq,
    options?: RequestOptions,
  ): Promise<components.FeedbackCreateRes> {
    return unwrapAsync(feedbackCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Feedback Query
   *
   * @remarks
   * Query for feedback.
   */
  async query(
    request: components.FeedbackQueryReq,
    options?: RequestOptions,
  ): Promise<components.FeedbackQueryRes> {
    return unwrapAsync(feedbackQuery(
      this,
      request,
      options,
    ));
  }

  /**
   * Feedback Purge
   *
   * @remarks
   * Permanently delete feedback.
   */
  async purge(
    request: components.FeedbackPurgeReq,
    options?: RequestOptions,
  ): Promise<components.FeedbackPurgeRes> {
    return unwrapAsync(feedbackPurge(
      this,
      request,
      options,
    ));
  }
}
