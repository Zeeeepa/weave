/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  EndedCallSchemaForInsert,
  EndedCallSchemaForInsert$inboundSchema,
  EndedCallSchemaForInsert$Outbound,
  EndedCallSchemaForInsert$outboundSchema,
} from "./endedcallschemaforinsert.js";

export type CallEndReq = {
  end: EndedCallSchemaForInsert;
};

/** @internal */
export const CallEndReq$inboundSchema: z.ZodType<
  CallEndReq,
  z.ZodTypeDef,
  unknown
> = z.object({
  end: EndedCallSchemaForInsert$inboundSchema,
});

/** @internal */
export type CallEndReq$Outbound = {
  end: EndedCallSchemaForInsert$Outbound;
};

/** @internal */
export const CallEndReq$outboundSchema: z.ZodType<
  CallEndReq$Outbound,
  z.ZodTypeDef,
  CallEndReq
> = z.object({
  end: EndedCallSchemaForInsert$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CallEndReq$ {
  /** @deprecated use `CallEndReq$inboundSchema` instead. */
  export const inboundSchema = CallEndReq$inboundSchema;
  /** @deprecated use `CallEndReq$outboundSchema` instead. */
  export const outboundSchema = CallEndReq$outboundSchema;
  /** @deprecated use `CallEndReq$Outbound` instead. */
  export type Outbound = CallEndReq$Outbound;
}

export function callEndReqToJSON(callEndReq: CallEndReq): string {
  return JSON.stringify(CallEndReq$outboundSchema.parse(callEndReq));
}

export function callEndReqFromJSON(
  jsonString: string,
): SafeParseResult<CallEndReq, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CallEndReq$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CallEndReq' from JSON`,
  );
}
