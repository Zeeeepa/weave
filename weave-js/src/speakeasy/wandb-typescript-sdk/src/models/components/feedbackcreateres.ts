/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type FeedbackCreateResPayload = {};

export type FeedbackCreateRes = {
  id: string;
  createdAt: Date;
  wbUserId: string;
  payload: FeedbackCreateResPayload;
};

/** @internal */
export const FeedbackCreateResPayload$inboundSchema: z.ZodType<
  FeedbackCreateResPayload,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type FeedbackCreateResPayload$Outbound = {};

/** @internal */
export const FeedbackCreateResPayload$outboundSchema: z.ZodType<
  FeedbackCreateResPayload$Outbound,
  z.ZodTypeDef,
  FeedbackCreateResPayload
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FeedbackCreateResPayload$ {
  /** @deprecated use `FeedbackCreateResPayload$inboundSchema` instead. */
  export const inboundSchema = FeedbackCreateResPayload$inboundSchema;
  /** @deprecated use `FeedbackCreateResPayload$outboundSchema` instead. */
  export const outboundSchema = FeedbackCreateResPayload$outboundSchema;
  /** @deprecated use `FeedbackCreateResPayload$Outbound` instead. */
  export type Outbound = FeedbackCreateResPayload$Outbound;
}

export function feedbackCreateResPayloadToJSON(
  feedbackCreateResPayload: FeedbackCreateResPayload,
): string {
  return JSON.stringify(
    FeedbackCreateResPayload$outboundSchema.parse(feedbackCreateResPayload),
  );
}

export function feedbackCreateResPayloadFromJSON(
  jsonString: string,
): SafeParseResult<FeedbackCreateResPayload, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FeedbackCreateResPayload$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FeedbackCreateResPayload' from JSON`,
  );
}

/** @internal */
export const FeedbackCreateRes$inboundSchema: z.ZodType<
  FeedbackCreateRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  wb_user_id: z.string(),
  payload: z.lazy(() => FeedbackCreateResPayload$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "created_at": "createdAt",
    "wb_user_id": "wbUserId",
  });
});

/** @internal */
export type FeedbackCreateRes$Outbound = {
  id: string;
  created_at: string;
  wb_user_id: string;
  payload: FeedbackCreateResPayload$Outbound;
};

/** @internal */
export const FeedbackCreateRes$outboundSchema: z.ZodType<
  FeedbackCreateRes$Outbound,
  z.ZodTypeDef,
  FeedbackCreateRes
> = z.object({
  id: z.string(),
  createdAt: z.date().transform(v => v.toISOString()),
  wbUserId: z.string(),
  payload: z.lazy(() => FeedbackCreateResPayload$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    createdAt: "created_at",
    wbUserId: "wb_user_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FeedbackCreateRes$ {
  /** @deprecated use `FeedbackCreateRes$inboundSchema` instead. */
  export const inboundSchema = FeedbackCreateRes$inboundSchema;
  /** @deprecated use `FeedbackCreateRes$outboundSchema` instead. */
  export const outboundSchema = FeedbackCreateRes$outboundSchema;
  /** @deprecated use `FeedbackCreateRes$Outbound` instead. */
  export type Outbound = FeedbackCreateRes$Outbound;
}

export function feedbackCreateResToJSON(
  feedbackCreateRes: FeedbackCreateRes,
): string {
  return JSON.stringify(
    FeedbackCreateRes$outboundSchema.parse(feedbackCreateRes),
  );
}

export function feedbackCreateResFromJSON(
  jsonString: string,
): SafeParseResult<FeedbackCreateRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FeedbackCreateRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FeedbackCreateRes' from JSON`,
  );
}
