/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CostCreateRes = {
  ids: Array<Array<string>>;
};

/** @internal */
export const CostCreateRes$inboundSchema: z.ZodType<
  CostCreateRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  ids: z.array(z.array(z.string())),
});

/** @internal */
export type CostCreateRes$Outbound = {
  ids: Array<Array<string>>;
};

/** @internal */
export const CostCreateRes$outboundSchema: z.ZodType<
  CostCreateRes$Outbound,
  z.ZodTypeDef,
  CostCreateRes
> = z.object({
  ids: z.array(z.array(z.string())),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CostCreateRes$ {
  /** @deprecated use `CostCreateRes$inboundSchema` instead. */
  export const inboundSchema = CostCreateRes$inboundSchema;
  /** @deprecated use `CostCreateRes$outboundSchema` instead. */
  export const outboundSchema = CostCreateRes$outboundSchema;
  /** @deprecated use `CostCreateRes$Outbound` instead. */
  export type Outbound = CostCreateRes$Outbound;
}

export function costCreateResToJSON(costCreateRes: CostCreateRes): string {
  return JSON.stringify(CostCreateRes$outboundSchema.parse(costCreateRes));
}

export function costCreateResFromJSON(
  jsonString: string,
): SafeParseResult<CostCreateRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CostCreateRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CostCreateRes' from JSON`,
  );
}
