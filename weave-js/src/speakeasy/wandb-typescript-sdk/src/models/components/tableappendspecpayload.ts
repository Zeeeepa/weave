/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Row = {};

export type TableAppendSpecPayload = {
  row: Row;
};

/** @internal */
export const Row$inboundSchema: z.ZodType<Row, z.ZodTypeDef, unknown> = z
  .object({});

/** @internal */
export type Row$Outbound = {};

/** @internal */
export const Row$outboundSchema: z.ZodType<Row$Outbound, z.ZodTypeDef, Row> = z
  .object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Row$ {
  /** @deprecated use `Row$inboundSchema` instead. */
  export const inboundSchema = Row$inboundSchema;
  /** @deprecated use `Row$outboundSchema` instead. */
  export const outboundSchema = Row$outboundSchema;
  /** @deprecated use `Row$Outbound` instead. */
  export type Outbound = Row$Outbound;
}

export function rowToJSON(row: Row): string {
  return JSON.stringify(Row$outboundSchema.parse(row));
}

export function rowFromJSON(
  jsonString: string,
): SafeParseResult<Row, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Row$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Row' from JSON`,
  );
}

/** @internal */
export const TableAppendSpecPayload$inboundSchema: z.ZodType<
  TableAppendSpecPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  row: z.lazy(() => Row$inboundSchema),
});

/** @internal */
export type TableAppendSpecPayload$Outbound = {
  row: Row$Outbound;
};

/** @internal */
export const TableAppendSpecPayload$outboundSchema: z.ZodType<
  TableAppendSpecPayload$Outbound,
  z.ZodTypeDef,
  TableAppendSpecPayload
> = z.object({
  row: z.lazy(() => Row$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TableAppendSpecPayload$ {
  /** @deprecated use `TableAppendSpecPayload$inboundSchema` instead. */
  export const inboundSchema = TableAppendSpecPayload$inboundSchema;
  /** @deprecated use `TableAppendSpecPayload$outboundSchema` instead. */
  export const outboundSchema = TableAppendSpecPayload$outboundSchema;
  /** @deprecated use `TableAppendSpecPayload$Outbound` instead. */
  export type Outbound = TableAppendSpecPayload$Outbound;
}

export function tableAppendSpecPayloadToJSON(
  tableAppendSpecPayload: TableAppendSpecPayload,
): string {
  return JSON.stringify(
    TableAppendSpecPayload$outboundSchema.parse(tableAppendSpecPayload),
  );
}

export function tableAppendSpecPayloadFromJSON(
  jsonString: string,
): SafeParseResult<TableAppendSpecPayload, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TableAppendSpecPayload$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TableAppendSpecPayload' from JSON`,
  );
}
