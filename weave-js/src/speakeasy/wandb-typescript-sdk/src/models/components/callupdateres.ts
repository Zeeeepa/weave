/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CallUpdateRes = {};

/** @internal */
export const CallUpdateRes$inboundSchema: z.ZodType<
  CallUpdateRes,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CallUpdateRes$Outbound = {};

/** @internal */
export const CallUpdateRes$outboundSchema: z.ZodType<
  CallUpdateRes$Outbound,
  z.ZodTypeDef,
  CallUpdateRes
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CallUpdateRes$ {
  /** @deprecated use `CallUpdateRes$inboundSchema` instead. */
  export const inboundSchema = CallUpdateRes$inboundSchema;
  /** @deprecated use `CallUpdateRes$outboundSchema` instead. */
  export const outboundSchema = CallUpdateRes$outboundSchema;
  /** @deprecated use `CallUpdateRes$Outbound` instead. */
  export type Outbound = CallUpdateRes$Outbound;
}

export function callUpdateResToJSON(callUpdateRes: CallUpdateRes): string {
  return JSON.stringify(CallUpdateRes$outboundSchema.parse(callUpdateRes));
}

export function callUpdateResFromJSON(
  jsonString: string,
): SafeParseResult<CallUpdateRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CallUpdateRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CallUpdateRes' from JSON`,
  );
}
