/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type TableQueryStatsRes = {
  count: number;
};

/** @internal */
export const TableQueryStatsRes$inboundSchema: z.ZodType<
  TableQueryStatsRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int(),
});

/** @internal */
export type TableQueryStatsRes$Outbound = {
  count: number;
};

/** @internal */
export const TableQueryStatsRes$outboundSchema: z.ZodType<
  TableQueryStatsRes$Outbound,
  z.ZodTypeDef,
  TableQueryStatsRes
> = z.object({
  count: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TableQueryStatsRes$ {
  /** @deprecated use `TableQueryStatsRes$inboundSchema` instead. */
  export const inboundSchema = TableQueryStatsRes$inboundSchema;
  /** @deprecated use `TableQueryStatsRes$outboundSchema` instead. */
  export const outboundSchema = TableQueryStatsRes$outboundSchema;
  /** @deprecated use `TableQueryStatsRes$Outbound` instead. */
  export type Outbound = TableQueryStatsRes$Outbound;
}

export function tableQueryStatsResToJSON(
  tableQueryStatsRes: TableQueryStatsRes,
): string {
  return JSON.stringify(
    TableQueryStatsRes$outboundSchema.parse(tableQueryStatsRes),
  );
}

export function tableQueryStatsResFromJSON(
  jsonString: string,
): SafeParseResult<TableQueryStatsRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TableQueryStatsRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TableQueryStatsRes' from JSON`,
  );
}
