/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CallsQueryStatsRes = {
  count: number;
};

/** @internal */
export const CallsQueryStatsRes$inboundSchema: z.ZodType<
  CallsQueryStatsRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number().int(),
});

/** @internal */
export type CallsQueryStatsRes$Outbound = {
  count: number;
};

/** @internal */
export const CallsQueryStatsRes$outboundSchema: z.ZodType<
  CallsQueryStatsRes$Outbound,
  z.ZodTypeDef,
  CallsQueryStatsRes
> = z.object({
  count: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CallsQueryStatsRes$ {
  /** @deprecated use `CallsQueryStatsRes$inboundSchema` instead. */
  export const inboundSchema = CallsQueryStatsRes$inboundSchema;
  /** @deprecated use `CallsQueryStatsRes$outboundSchema` instead. */
  export const outboundSchema = CallsQueryStatsRes$outboundSchema;
  /** @deprecated use `CallsQueryStatsRes$Outbound` instead. */
  export type Outbound = CallsQueryStatsRes$Outbound;
}

export function callsQueryStatsResToJSON(
  callsQueryStatsRes: CallsQueryStatsRes,
): string {
  return JSON.stringify(
    CallsQueryStatsRes$outboundSchema.parse(callsQueryStatsRes),
  );
}

export function callsQueryStatsResFromJSON(
  jsonString: string,
): SafeParseResult<CallsQueryStatsRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CallsQueryStatsRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CallsQueryStatsRes' from JSON`,
  );
}
