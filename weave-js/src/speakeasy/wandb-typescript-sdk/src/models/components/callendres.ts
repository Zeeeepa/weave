/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CallEndRes = {};

/** @internal */
export const CallEndRes$inboundSchema: z.ZodType<
  CallEndRes,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CallEndRes$Outbound = {};

/** @internal */
export const CallEndRes$outboundSchema: z.ZodType<
  CallEndRes$Outbound,
  z.ZodTypeDef,
  CallEndRes
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CallEndRes$ {
  /** @deprecated use `CallEndRes$inboundSchema` instead. */
  export const inboundSchema = CallEndRes$inboundSchema;
  /** @deprecated use `CallEndRes$outboundSchema` instead. */
  export const outboundSchema = CallEndRes$outboundSchema;
  /** @deprecated use `CallEndRes$Outbound` instead. */
  export type Outbound = CallEndRes$Outbound;
}

export function callEndResToJSON(callEndRes: CallEndRes): string {
  return JSON.stringify(CallEndRes$outboundSchema.parse(callEndRes));
}

export function callEndResFromJSON(
  jsonString: string,
): SafeParseResult<CallEndRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CallEndRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CallEndRes' from JSON`,
  );
}
