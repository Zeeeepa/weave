/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  StartedCallSchemaForInsert,
  StartedCallSchemaForInsert$inboundSchema,
  StartedCallSchemaForInsert$Outbound,
  StartedCallSchemaForInsert$outboundSchema,
} from "./startedcallschemaforinsert.js";

export type CallStartReq = {
  start: StartedCallSchemaForInsert;
};

/** @internal */
export const CallStartReq$inboundSchema: z.ZodType<
  CallStartReq,
  z.ZodTypeDef,
  unknown
> = z.object({
  start: StartedCallSchemaForInsert$inboundSchema,
});

/** @internal */
export type CallStartReq$Outbound = {
  start: StartedCallSchemaForInsert$Outbound;
};

/** @internal */
export const CallStartReq$outboundSchema: z.ZodType<
  CallStartReq$Outbound,
  z.ZodTypeDef,
  CallStartReq
> = z.object({
  start: StartedCallSchemaForInsert$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CallStartReq$ {
  /** @deprecated use `CallStartReq$inboundSchema` instead. */
  export const inboundSchema = CallStartReq$inboundSchema;
  /** @deprecated use `CallStartReq$outboundSchema` instead. */
  export const outboundSchema = CallStartReq$outboundSchema;
  /** @deprecated use `CallStartReq$Outbound` instead. */
  export type Outbound = CallStartReq$Outbound;
}

export function callStartReqToJSON(callStartReq: CallStartReq): string {
  return JSON.stringify(CallStartReq$outboundSchema.parse(callStartReq));
}

export function callStartReqFromJSON(
  jsonString: string,
): SafeParseResult<CallStartReq, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CallStartReq$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CallStartReq' from JSON`,
  );
}
