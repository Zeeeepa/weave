/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CallEndReq,
  CallEndReq$inboundSchema,
  CallEndReq$Outbound,
  CallEndReq$outboundSchema,
} from "./callendreq.js";

export type CallBatchEndMode = {
  mode?: string | undefined;
  req: CallEndReq;
};

/** @internal */
export const CallBatchEndMode$inboundSchema: z.ZodType<
  CallBatchEndMode,
  z.ZodTypeDef,
  unknown
> = z.object({
  mode: z.string().default("end"),
  req: CallEndReq$inboundSchema,
});

/** @internal */
export type CallBatchEndMode$Outbound = {
  mode: string;
  req: CallEndReq$Outbound;
};

/** @internal */
export const CallBatchEndMode$outboundSchema: z.ZodType<
  CallBatchEndMode$Outbound,
  z.ZodTypeDef,
  CallBatchEndMode
> = z.object({
  mode: z.string().default("end"),
  req: CallEndReq$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CallBatchEndMode$ {
  /** @deprecated use `CallBatchEndMode$inboundSchema` instead. */
  export const inboundSchema = CallBatchEndMode$inboundSchema;
  /** @deprecated use `CallBatchEndMode$outboundSchema` instead. */
  export const outboundSchema = CallBatchEndMode$outboundSchema;
  /** @deprecated use `CallBatchEndMode$Outbound` instead. */
  export type Outbound = CallBatchEndMode$Outbound;
}

export function callBatchEndModeToJSON(
  callBatchEndMode: CallBatchEndMode,
): string {
  return JSON.stringify(
    CallBatchEndMode$outboundSchema.parse(callBatchEndMode),
  );
}

export function callBatchEndModeFromJSON(
  jsonString: string,
): SafeParseResult<CallBatchEndMode, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CallBatchEndMode$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CallBatchEndMode' from JSON`,
  );
}
