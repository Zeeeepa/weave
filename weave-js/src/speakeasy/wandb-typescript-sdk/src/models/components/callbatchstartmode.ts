/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  CallStartReq,
  CallStartReq$inboundSchema,
  CallStartReq$Outbound,
  CallStartReq$outboundSchema,
} from "./callstartreq.js";

export type CallBatchStartMode = {
  mode?: string | undefined;
  req: CallStartReq;
};

/** @internal */
export const CallBatchStartMode$inboundSchema: z.ZodType<
  CallBatchStartMode,
  z.ZodTypeDef,
  unknown
> = z.object({
  mode: z.string().default("start"),
  req: CallStartReq$inboundSchema,
});

/** @internal */
export type CallBatchStartMode$Outbound = {
  mode: string;
  req: CallStartReq$Outbound;
};

/** @internal */
export const CallBatchStartMode$outboundSchema: z.ZodType<
  CallBatchStartMode$Outbound,
  z.ZodTypeDef,
  CallBatchStartMode
> = z.object({
  mode: z.string().default("start"),
  req: CallStartReq$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CallBatchStartMode$ {
  /** @deprecated use `CallBatchStartMode$inboundSchema` instead. */
  export const inboundSchema = CallBatchStartMode$inboundSchema;
  /** @deprecated use `CallBatchStartMode$outboundSchema` instead. */
  export const outboundSchema = CallBatchStartMode$outboundSchema;
  /** @deprecated use `CallBatchStartMode$Outbound` instead. */
  export type Outbound = CallBatchStartMode$Outbound;
}

export function callBatchStartModeToJSON(
  callBatchStartMode: CallBatchStartMode,
): string {
  return JSON.stringify(
    CallBatchStartMode$outboundSchema.parse(callBatchStartMode),
  );
}

export function callBatchStartModeFromJSON(
  jsonString: string,
): SafeParseResult<CallBatchStartMode, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CallBatchStartMode$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CallBatchStartMode' from JSON`,
  );
}
