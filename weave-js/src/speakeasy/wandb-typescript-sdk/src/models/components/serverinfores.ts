/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ServerInfoRes = {
  minRequiredWeavePythonVersion: string;
};

/** @internal */
export const ServerInfoRes$inboundSchema: z.ZodType<
  ServerInfoRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  min_required_weave_python_version: z.string(),
}).transform((v) => {
  return remap$(v, {
    "min_required_weave_python_version": "minRequiredWeavePythonVersion",
  });
});

/** @internal */
export type ServerInfoRes$Outbound = {
  min_required_weave_python_version: string;
};

/** @internal */
export const ServerInfoRes$outboundSchema: z.ZodType<
  ServerInfoRes$Outbound,
  z.ZodTypeDef,
  ServerInfoRes
> = z.object({
  minRequiredWeavePythonVersion: z.string(),
}).transform((v) => {
  return remap$(v, {
    minRequiredWeavePythonVersion: "min_required_weave_python_version",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ServerInfoRes$ {
  /** @deprecated use `ServerInfoRes$inboundSchema` instead. */
  export const inboundSchema = ServerInfoRes$inboundSchema;
  /** @deprecated use `ServerInfoRes$outboundSchema` instead. */
  export const outboundSchema = ServerInfoRes$outboundSchema;
  /** @deprecated use `ServerInfoRes$Outbound` instead. */
  export type Outbound = ServerInfoRes$Outbound;
}

export function serverInfoResToJSON(serverInfoRes: ServerInfoRes): string {
  return JSON.stringify(ServerInfoRes$outboundSchema.parse(serverInfoRes));
}

export function serverInfoResFromJSON(
  jsonString: string,
): SafeParseResult<ServerInfoRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ServerInfoRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ServerInfoRes' from JSON`,
  );
}
