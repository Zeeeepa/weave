/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  ObjSchemaForInsert,
  ObjSchemaForInsert$inboundSchema,
  ObjSchemaForInsert$Outbound,
  ObjSchemaForInsert$outboundSchema,
} from "./objschemaforinsert.js";

export type ObjCreateReq = {
  obj: ObjSchemaForInsert;
};

/** @internal */
export const ObjCreateReq$inboundSchema: z.ZodType<
  ObjCreateReq,
  z.ZodTypeDef,
  unknown
> = z.object({
  obj: ObjSchemaForInsert$inboundSchema,
});

/** @internal */
export type ObjCreateReq$Outbound = {
  obj: ObjSchemaForInsert$Outbound;
};

/** @internal */
export const ObjCreateReq$outboundSchema: z.ZodType<
  ObjCreateReq$Outbound,
  z.ZodTypeDef,
  ObjCreateReq
> = z.object({
  obj: ObjSchemaForInsert$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ObjCreateReq$ {
  /** @deprecated use `ObjCreateReq$inboundSchema` instead. */
  export const inboundSchema = ObjCreateReq$inboundSchema;
  /** @deprecated use `ObjCreateReq$outboundSchema` instead. */
  export const outboundSchema = ObjCreateReq$outboundSchema;
  /** @deprecated use `ObjCreateReq$Outbound` instead. */
  export type Outbound = ObjCreateReq$Outbound;
}

export function objCreateReqToJSON(objCreateReq: ObjCreateReq): string {
  return JSON.stringify(ObjCreateReq$outboundSchema.parse(objCreateReq));
}

export function objCreateReqFromJSON(
  jsonString: string,
): SafeParseResult<ObjCreateReq, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ObjCreateReq$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ObjCreateReq' from JSON`,
  );
}
