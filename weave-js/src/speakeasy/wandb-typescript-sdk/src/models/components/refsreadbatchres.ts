/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RefsReadBatchRes = {
  vals: Array<any>;
};

/** @internal */
export const RefsReadBatchRes$inboundSchema: z.ZodType<
  RefsReadBatchRes,
  z.ZodTypeDef,
  unknown
> = z.object({
  vals: z.array(z.any()),
});

/** @internal */
export type RefsReadBatchRes$Outbound = {
  vals: Array<any>;
};

/** @internal */
export const RefsReadBatchRes$outboundSchema: z.ZodType<
  RefsReadBatchRes$Outbound,
  z.ZodTypeDef,
  RefsReadBatchRes
> = z.object({
  vals: z.array(z.any()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RefsReadBatchRes$ {
  /** @deprecated use `RefsReadBatchRes$inboundSchema` instead. */
  export const inboundSchema = RefsReadBatchRes$inboundSchema;
  /** @deprecated use `RefsReadBatchRes$outboundSchema` instead. */
  export const outboundSchema = RefsReadBatchRes$outboundSchema;
  /** @deprecated use `RefsReadBatchRes$Outbound` instead. */
  export type Outbound = RefsReadBatchRes$Outbound;
}

export function refsReadBatchResToJSON(
  refsReadBatchRes: RefsReadBatchRes,
): string {
  return JSON.stringify(
    RefsReadBatchRes$outboundSchema.parse(refsReadBatchRes),
  );
}

export function refsReadBatchResFromJSON(
  jsonString: string,
): SafeParseResult<RefsReadBatchRes, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RefsReadBatchRes$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RefsReadBatchRes' from JSON`,
  );
}
