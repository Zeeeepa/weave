/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type RefsReadBatchReq = {
  refs: Array<string>;
};

/** @internal */
export const RefsReadBatchReq$inboundSchema: z.ZodType<
  RefsReadBatchReq,
  z.ZodTypeDef,
  unknown
> = z.object({
  refs: z.array(z.string()),
});

/** @internal */
export type RefsReadBatchReq$Outbound = {
  refs: Array<string>;
};

/** @internal */
export const RefsReadBatchReq$outboundSchema: z.ZodType<
  RefsReadBatchReq$Outbound,
  z.ZodTypeDef,
  RefsReadBatchReq
> = z.object({
  refs: z.array(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RefsReadBatchReq$ {
  /** @deprecated use `RefsReadBatchReq$inboundSchema` instead. */
  export const inboundSchema = RefsReadBatchReq$inboundSchema;
  /** @deprecated use `RefsReadBatchReq$outboundSchema` instead. */
  export const outboundSchema = RefsReadBatchReq$outboundSchema;
  /** @deprecated use `RefsReadBatchReq$Outbound` instead. */
  export type Outbound = RefsReadBatchReq$Outbound;
}

export function refsReadBatchReqToJSON(
  refsReadBatchReq: RefsReadBatchReq,
): string {
  return JSON.stringify(
    RefsReadBatchReq$outboundSchema.parse(refsReadBatchReq),
  );
}

export function refsReadBatchReqFromJSON(
  jsonString: string,
): SafeParseResult<RefsReadBatchReq, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RefsReadBatchReq$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RefsReadBatchReq' from JSON`,
  );
}
