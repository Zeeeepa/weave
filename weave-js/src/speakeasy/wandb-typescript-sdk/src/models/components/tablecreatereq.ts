/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  TableSchemaForInsert,
  TableSchemaForInsert$inboundSchema,
  TableSchemaForInsert$Outbound,
  TableSchemaForInsert$outboundSchema,
} from "./tableschemaforinsert.js";

export type TableCreateReq = {
  table: TableSchemaForInsert;
};

/** @internal */
export const TableCreateReq$inboundSchema: z.ZodType<
  TableCreateReq,
  z.ZodTypeDef,
  unknown
> = z.object({
  table: TableSchemaForInsert$inboundSchema,
});

/** @internal */
export type TableCreateReq$Outbound = {
  table: TableSchemaForInsert$Outbound;
};

/** @internal */
export const TableCreateReq$outboundSchema: z.ZodType<
  TableCreateReq$Outbound,
  z.ZodTypeDef,
  TableCreateReq
> = z.object({
  table: TableSchemaForInsert$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TableCreateReq$ {
  /** @deprecated use `TableCreateReq$inboundSchema` instead. */
  export const inboundSchema = TableCreateReq$inboundSchema;
  /** @deprecated use `TableCreateReq$outboundSchema` instead. */
  export const outboundSchema = TableCreateReq$outboundSchema;
  /** @deprecated use `TableCreateReq$Outbound` instead. */
  export type Outbound = TableCreateReq$Outbound;
}

export function tableCreateReqToJSON(tableCreateReq: TableCreateReq): string {
  return JSON.stringify(TableCreateReq$outboundSchema.parse(tableCreateReq));
}

export function tableCreateReqFromJSON(
  jsonString: string,
): SafeParseResult<TableCreateReq, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => TableCreateReq$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'TableCreateReq' from JSON`,
  );
}
